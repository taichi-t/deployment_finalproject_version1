// CSS Fluid Mixin from https://css-tricks.com/snippets/css/fluid-typography/
// @function strip-unit($value) {
//     @return $value / ($value * 0 + 1);
// }

// @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
//     $u1: unit($min-vw);
//     $u2: unit($max-vw);
//     $u3: unit($min-font-size);
//     $u4: unit($max-font-size);

//     @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
//         & {
//             font-size: $min-font-size;
//             @media screen and (min-width: $min-vw) {
//                 font-size: calc(
//                     #{$min-font-size} + #{strip-unit(
//                             $max-font-size - $min-font-size
//                         )} *
//                         (
//                             (100vw - #{$min-vw}) / #{strip-unit(
//                                     $max-vw - $min-vw
//                                 )}
//                         )
//                 );
//             }

//             @media screen and (min-width: $max-vw) {
//                 font-size: $max-font-size;
//             }
//         }
//     }
// }

// $min_width: 320px;
// $max_width: 1000px;
// $min_font: 16px;
// $max_font: 20px;

// // Lato font-face
// @font-face {
//     font-family: 'Lato';
//     font-style: normal;
//     font-weight: 400;
//      src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v14/S6uyw4BMUTPHjx4wXiWtFCc.woff2) format('woff2');
//     /* The browser draws the text immediately in the fallback font if the font
//               isn't loaded, then swaps it with the webfont when it eventually loads
//               See: https://developers.google.com/web/updates/2016/02/font-display
//             */
//     font-display: swap;
// }
// // Playfair Display font-face
// @font-face {
//   font-family: 'Playfair Display';
//   font-style: normal;
//   font-weight: 400;
//   src: local('Playfair Display Regular'), local('PlayfairDisplay-Regular'), url(https://fonts.gstatic.com/s/playfairdisplay/v13/nuFiD-vYSZviVYUb_rj3ij__anPXDTzYgEM86xQ.woff2) format('woff2');
//   font-display: swap;
// }
// @font-face {
//   font-family: 'Playfair Display';
//   font-style: normal;
//   font-weight: 900;
//   src: local('Playfair Display Black'), local('PlayfairDisplay-Black'), url(https://fonts.gstatic.com/s/playfairdisplay/v13/nuFlD-vYSZviVYUb_rj3ij__anPXBb__lW4e5j5hNKc.woff2) format('woff2');
//   font-display: swap;
// }

// Material Icons font-face

/* fallback */
@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 400;
  src: local("Material Icons Regular"), local("MaterialIcons-Regular"),
    url(https://fonts.gstatic.com/s/materialicons/v47/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2)
      format("woff2");
  font-display: swap;
}

.material-icons {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: "liga";
  -webkit-font-smoothing: antialiased;
}

// html {
//     @include fluid-type($min_width, $max_width, $min_font, $max_font);
// }

.anoun-title {
  font-family: "Playfair Display", serif;
  font-weight: 900;
}
